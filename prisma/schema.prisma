generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Student {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  courses   Course[] @relation("StudentCourses")
  enrollments Enrollment[]
  progresses Progress[]
  createdAt DateTime @default(now())
}

model Teacher {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  courses   Course[] @relation("TeacherCourses")
  createdAt DateTime @default(now())
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String
  instrument  String
  teacherId   String
  teacher     Teacher @relation("TeacherCourses", fields: [teacherId], references: [id])
  level       String
  schedule    String
  capacity    Int
  enrollments Enrollment[]
  progresses  Progress[]
  students    Student[] @relation("StudentCourses") // Ajout de la relation inverse
}

model Enrollment {
  id            String   @id @default(uuid())
  studentId     String
  student       Student  @relation(fields: [studentId], references: [id])
  courseId      String
  course        Course   @relation(fields: [courseId], references: [id])
  enrollmentDate DateTime @default(now())
  status        String
}

model Progress {
  id          String   @id @default(uuid())
  studentId   String
  student     Student  @relation(fields: [studentId], references: [id])
  courseId    String
  course      Course   @relation(fields: [courseId], references: [id])
  date        DateTime @default(now())
  evaluation  String
  comments    String
}

